// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "command+j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "down",
        "command": "-list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "command+k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "up",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "command+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "command+j",
        "command": "workbench.action.quickOpenSelectNext"
    },
    {
        "key": "command+k",
        "command": "workbench.action.quickOpenSelectPrevious"
    },
    {
        "key": "command+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "command+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "command+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "command+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "command+tab",
        "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "command+shift+tab",
        "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "command+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "command+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "command+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "command+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "command+`",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "command+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "command+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "command+d",
        "command": "-list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "command+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "pageup",
        "command": "-list.focusPageUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "pagedown",
        "command": "-list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "command+u",
        "command": "-list.focusPageUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "pagedown",
        "command": "-workbench.action.interactivePlayground.pageDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "pageup",
        "command": "-workbench.action.interactivePlayground.pageUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "command+u",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "pageup",
        "command": "-cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "command+d",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "pagedown",
        "command": "-cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "command+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "command+s",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "command+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "command+shift+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "command+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "command+enter",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "command+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "command+shift+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "command+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "command+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "command+shift+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "command+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "command+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "command+numpad_add",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "command+numpad0",
        "command": "-workbench.action.zoomReset"
    },
    {
        "key": "command+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFile",
        "when": "false"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    }
]
