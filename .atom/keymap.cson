# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

'.platform-linux':
    'ctrl-t': 'unset!'
    'ctrl-q': 'window:close'
    'ctrl-shift-W': 'unset!'
    'ctrl-s': 'unset!'

'atom-text-editor.vim-mode':
    'ctrl-c': 'core:copy'
    'ctrl-v': 'core:paste'

'atom-text-editor':
  'f10': 'editor:toggle-soft-wrap'
  'ctrl-s': 'symbols-view:toggle-file-symbols'

# UP/DOWN in finders
'.fuzzy-finder':
    'ctrl-k': 'core:move-up'
    'ctrl-j': 'core:move-down'

'.symbols-view':
    'ctrl-k': 'core:move-up'
    'ctrl-j': 'core:move-down'

'.nvatom':
    'ctrl-k': 'core:move-up'
    'ctrl-j': 'core:move-down'

#  NVATOM
'atom-workspace':
  'alt-ctrl-l': 'nvatom:toggle'
'atom-workspace atom-text-editor':
  'alt-ctrl-o': 'nvatom:openInterlink'

# Markdown preview
'atom-workspace, atom-workspace atom-text-editor':
  'ctrl-M': 'markdown-preview:toggle'
'atom-workspace, atom-workspace atom-text-editor':
  'ctrl-M': 'markdown-preview-plus:toggle'
